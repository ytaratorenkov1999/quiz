class QuizApp {
    constructor() {
        this.currentCategory = null;
        this.questions = [];
        this.currentQuestionIndex = 0;
        this.score = 0;
        this.correctAnswers = 0;
        this.questionHistory = [];
        this.selectedAnswers = {}; // –•—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        this.portalUrl = '/';

        this.exitModal = null;
        this.exitConfirm = null;
        this.exitCancel = null;

        this.categoryModal = null;
        this.categoryModalData = null;

        this.init();
    }

    init() {
        this.cacheElements();
        this.attachEventListeners();
        this.initModals();
    }

    cacheElements() {
        this.welcomeScreen = document.getElementById('welcome-screen');
        this.quizScreen = document.getElementById('quiz-screen');
        this.resultsScreen = document.getElementById('results-screen');

        this.questionText = document.getElementById('question-text');
        this.questionImageContainer = document.getElementById('question-image-container');
        this.answersContainer = document.getElementById('answers-container');
        this.currentQuestionSpan = document.getElementById('current-question');
        this.totalQuestionsSpan = document.getElementById('total-questions');
        this.progressFill = document.getElementById('progress-fill');
        this.nextBtn = document.getElementById('next-btn');
        this.backBtn = document.getElementById('back-btn');

        this.resultsIcon = document.getElementById('results-icon');
        this.resultsTitle = document.getElementById('results-title');
        this.finalScoreSpan = document.getElementById('final-score');
        this.correctCountSpan = document.getElementById('correct-count');
        this.questionsCountSpan = document.getElementById('questions-count');
        this.resultsMessage = document.getElementById('results-message');
        this.percentageSpan = document.getElementById('percentage');
        this.resultsStats = document.getElementById('results-stats');

        this.exitBtn = document.getElementById('exit-btn');
    }

    initModals() {
        // Exit modal
        this.exitModal = document.getElementById('exit-modal');
        this.exitConfirm = document.getElementById('exit-confirm');
        this.exitCancel = document.getElementById('exit-cancel');

        this.exitConfirm.addEventListener('click', () => {
            this.returnToWelcomeScreen();
        });

        this.exitCancel.addEventListener('click', () => {
            this.hideExitModal();
        });

        this.exitModal.addEventListener('click', (e) => {
            if (e.target === this.exitModal) {
                this.hideExitModal();
            }
        });

        // Category modal
        this.categoryModal = document.getElementById('category-modal');
        this.categoryModalIcon = document.getElementById('category-modal-icon');
        this.categoryModalTitle = document.getElementById('category-modal-title');
        this.categoryModalDescription = document.getElementById('category-modal-description');
        this.categoryModalQuestions = document.getElementById('category-modal-questions');
        this.categoryModalDifficulty = document.getElementById('category-modal-difficulty');
        this.categoryBackBtn = document.getElementById('category-back');
        this.categoryStartBtn = document.getElementById('category-start');

        this.categoryBackBtn.addEventListener('click', () => {
            this.hideCategoryModal();
        });

        this.categoryStartBtn.addEventListener('click', () => {
            this.hideCategoryModal();
            if (this.selectedCategory) {
        this.startQuiz(this.selectedCategory);
            }
        });

        this.categoryModal.addEventListener('click', (e) => {
            if (e.target === this.categoryModal) {
                this.hideCategoryModal();
            }
        });
    }

    attachEventListeners() {
        this.exitBtn.addEventListener('click', () => {
            this.handleExitClick();
        });

        document.querySelectorAll('.category-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const category = e.currentTarget.dataset.category;
                this.showCategoryModal(category, e.currentTarget);
            });
        });

        this.backBtn.addEventListener('click', () => {
            this.goBack();
        });

        this.nextBtn.addEventListener('click', () => {
            this.nextQuestion();
        });

        document.getElementById('play-again-btn').addEventListener('click', () => {
            this.startQuiz(this.currentCategory);
        });

        document.getElementById('change-category-btn').addEventListener('click', () => {
            this.showScreen(this.welcomeScreen);
        });
    }

    getCategoryData(category) {
        const categories = {
            geography: {
                title: '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è',
                icon: 'üåç',
                difficulty: '–°—Ä–µ–¥–Ω—è—è',
                questions: 10,
                description: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏–∏–º—Ç—Ç—Ç—Ç—Ç—Ç—Ç—Ç—Ç—Ç–∏–º —Ç–º–∏—Ç–º–∏—Ç–∏–º—Ç–∏–º—Ç–∏–º—Ç–∏–º—Ç–º–∏—Ç–∏–º—Ç–∏–º—Ç–º–∏—è –æ —Å—Ç—Ä–∞–Ω–∞—Ö, —Å—Ç–æ–ª–∏—Ü–∞—Ö, —Ä–µ–∫–∞—Ö –∏ –≥–æ—Ä–∞—Ö –º–∏—Ä–∞.'
            },
            aviation: {
                title: '–ê–≤–∏–∞—Ü–∏—è',
                icon: '‚úàÔ∏è',
                difficulty: '–°–ª–æ–∂–Ω–∞—è',
                questions: 10,
                description: '–£–∑–Ω–∞–π—Ç–µ, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ –∞–≤–∏–∞—Ü–∏–∏ –∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—ë—Ç–æ–≤.'
            },
            culture: {
                title: '–ö—É–ª—å—Ç—É—Ä–∞',
                icon: 'üé≠',
                difficulty: '–°—Ä–µ–¥–Ω—è—è',
                questions: 10,
                description: '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –∏ –º—É–∑—ã–∫–∏.'
            },
            science: {
                title: '–ù–∞—É–∫–∞',
                icon: 'üî¨',
                difficulty: '–°–ª–æ–∂–Ω–∞—è',
                questions: 10,
                description: '–ò—Å–ø—ã—Ç–∞–π—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ —Ñ–∏–∑–∏–∫–∏, —Ö–∏–º–∏–∏ –∏ –±–∏–æ–ª–æ–≥–∏–∏.'
            },
            mixed: {
                title: '–ú–∏–∫—Å',
                icon: 'üé≤',
                difficulty: '–†–∞–∑–Ω–∞—è',
                questions: 15,
                description: '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–∞—è –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏–∑ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π.'
            }
        };
        return categories[category];
    }

    showCategoryModal(category, btnElement) {
        const categoryData = this.getCategoryData(category);

        this.categoryModalIcon.textContent = categoryData.icon;
        this.categoryModalTitle.textContent = categoryData.title;
        this.categoryModalDescription.textContent = categoryData.description;
        this.categoryModalQuestions.textContent = categoryData.questions;
        this.categoryModalDifficulty.textContent = categoryData.difficulty;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ–ª–µ
        this.selectedCategory = category;

        this.categoryModal.classList.add('active');
    }

    hideCategoryModal() {
        this.categoryModal.classList.remove('active');
        this.categoryModalData = null;
    }

    handleExitClick() {
        if (this.welcomeScreen.classList.contains('active')) {
            this.exitToPortal();
        } else {
            this.showExitModal();
        }
    }

    showExitModal() {
        this.exitModal.classList.add('active');
    }

    hideExitModal() {
        this.exitModal.classList.remove('active');
    }

    returnToWelcomeScreen() {
        this.hideExitModal();
        this.showScreen(this.welcomeScreen);
        this.resetQuiz();
    }

    exitToPortal() {
        window.location.href = this.portalUrl;
    }

    resetQuiz() {
        this.currentCategory = null;
        this.questions = [];
        this.currentQuestionIndex = 0;
        this.score = 0;
        this.correctAnswers = 0;
        this.questionHistory = [];
        this.selectedAnswers = {};
    }

    startQuiz(category) {
        this.currentCategory = category;
        this.questions = [...questionsDatabase[category]];
        this.currentQuestionIndex = 0;
        this.score = 0;
        this.correctAnswers = 0;
        this.questionHistory = [];
        this.selectedAnswers = {};

        this.totalQuestionsSpan.textContent = this.questions.length;

        this.showScreen(this.quizScreen);
        this.loadQuestion();
    }

    loadQuestion() {
        const question = this.questions[this.currentQuestionIndex];

        this.currentQuestionSpan.textContent = this.currentQuestionIndex + 1;
        const progress = ((this.currentQuestionIndex + 1) / this.questions.length) * 100;
        this.progressFill.style.width = progress + '%';

        if (question.image) {
            this.questionImageContainer.innerHTML = `<img src="${question.image}" alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞" class="question-image">`;
        } else {
            this.questionImageContainer.innerHTML = '';
        }

        this.questionText.textContent = question.question;
        this.answersContainer.innerHTML = '';

        question.answers.forEach((answer, index) => {
            const button = document.createElement('button');
            button.className = 'answer-btn';
            button.textContent = answer;
            button.dataset.index = index;
            button.addEventListener('click', () => this.selectAnswer(index));
            this.answersContainer.appendChild(button);
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ –¥–∞–Ω –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å
        const savedAnswer = this.selectedAnswers[this.currentQuestionIndex];
        if (savedAnswer !== undefined) {
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            this.restoreAnswerState(savedAnswer);
        } else {
            // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–î–∞–ª–µ–µ"
            this.nextBtn.classList.remove('active');
            this.nextBtn.disabled = true;
        }

        // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
        if (this.questionHistory.length === 0) {
            this.backBtn.style.opacity = '0.5';
        } else {
            this.backBtn.style.opacity = '1';
        }
    }

    restoreAnswerState(selectedIndex) {
        const question = this.questions[this.currentQuestionIndex];
        const answerButtons = this.answersContainer.querySelectorAll('.answer-btn');

        answerButtons.forEach(btn => btn.classList.add('disabled'));

        if (selectedIndex === question.correct) {
            answerButtons[selectedIndex].classList.add('correct');
        } else {
            answerButtons[selectedIndex].classList.add('incorrect');
            answerButtons[question.correct].classList.add('correct');
        }

        this.nextBtn.classList.add('active');
        this.nextBtn.disabled = false;
    }

    selectAnswer(selectedIndex) {
        // –ï—Å–ª–∏ —É–∂–µ –±—ã–ª –≤—ã–±—Ä–∞–Ω –æ—Ç–≤–µ—Ç, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        if (this.selectedAnswers[this.currentQuestionIndex] !== undefined) {
            return;
        }

        const question = this.questions[this.currentQuestionIndex];
        const answerButtons = this.answersContainer.querySelectorAll('.answer-btn');

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        this.selectedAnswers[this.currentQuestionIndex] = selectedIndex;

        answerButtons.forEach(btn => btn.classList.add('disabled'));

        const isCorrect = selectedIndex === question.correct;

        if (isCorrect) {
            answerButtons[selectedIndex].classList.add('correct');
            this.score += 10;
            this.correctAnswers++;
        } else {
            answerButtons[selectedIndex].classList.add('incorrect');
            answerButtons[question.correct].classList.add('correct');
        }

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–î–∞–ª–µ–µ" –±—ã—Å—Ç—Ä–µ–µ (100ms –≤–º–µ—Å—Ç–æ 500ms)
        setTimeout(() => {
            this.nextBtn.classList.add('active');
            this.nextBtn.disabled = false;
        }, 100);
    }

    nextQuestion() {
        this.questionHistory.push(this.currentQuestionIndex);
        this.currentQuestionIndex++;

        if (this.currentQuestionIndex < this.questions.length) {
            this.loadQuestion();
        } else {
            this.showResults();
        }
    }

    goBack() {
        if (this.questionHistory.length > 0) {
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
            this.currentQuestionIndex = this.questionHistory.pop();

            // –ù–ï —É–¥–∞–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç - –æ–Ω –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è
            // delete this.selectedAnswers[this.currentQuestionIndex]; // –£–î–ê–õ–ï–ù–û

            this.loadQuestion();
        } else {
            // –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
            this.showExitModal();
        }
    }

    showResults() {
        const percentage = Math.round((this.correctAnswers / this.questions.length) * 100);
        const incorrectAnswers = this.questions.length - this.correctAnswers;

        this.finalScoreSpan.textContent = this.score;
        this.correctCountSpan.textContent = this.correctAnswers;
        this.questionsCountSpan.textContent = this.questions.length;
        this.percentageSpan.textContent = percentage + '%';

        this.resultsStats.innerHTML = `
            <div class="stat-item">
                <span class="stat-value">${this.correctAnswers}</span>
                <span class="stat-label">–ü—Ä–∞–≤–∏–ª—å–Ω–æ</span>
            </div>
            <div class="stat-item">
                <span class="stat-value" style="color: var(--err);">${incorrectAnswers}</span>
                <span class="stat-label">–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ</span>
            </div>
            <div class="stat-item">
                <span class="stat-value">${percentage}%</span>
                <span class="stat-label">–¢–æ—á–Ω–æ—Å—Ç—å</span>
            </div>
        `;

        if (percentage >= 90) {
            this.resultsIcon.textContent = 'üèÜ';
            this.resultsTitle.textContent = '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ!';
            this.resultsMessage.textContent = '–í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —ç–∫—Å–ø–µ—Ä—Ç! –§–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í–∞—à–∏ –∑–Ω–∞–Ω–∏—è –≤–ø–µ—á–∞—Ç–ª—è—é—Ç!';
        } else if (percentage >= 70) {
            this.resultsIcon.textContent = 'üåü';
            this.resultsTitle.textContent = '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!';
            this.resultsMessage.textContent = '–í—ã –ø–æ–∫–∞–∑–∞–ª–∏ –æ—Ç–ª–∏—á–Ω—ã–µ –∑–Ω–∞–Ω–∏—è! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!';
        } else if (percentage >= 50) {
            this.resultsIcon.textContent = 'üëç';
            this.resultsTitle.textContent = '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!';
            this.resultsMessage.textContent = '–ù–µ–ø–ª–æ—Ö–æ! –ï—Å—Ç—å –∫—É–¥–∞ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è! –ï—â—ë –Ω–µ–º–Ω–æ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –±—É–¥–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!';
        } else {
            this.resultsIcon.textContent = 'üìö';
            this.resultsTitle.textContent = '–ú–æ–∂–Ω–æ –ª—É—á—à–µ!';
            this.resultsMessage.textContent = '–ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑! –ö–∞–∂–¥–∞—è –ø–æ–ø—ã—Ç–∫–∞ –¥–µ–ª–∞–µ—Ç –≤–∞—Å —É–º–Ω–µ–µ!';
        }

        this.showScreen(this.resultsScreen);
    }

    showScreen(screen) {
        document.querySelectorAll('.screen').forEach(s => s.classList.remove('active'));
        screen.classList.add('active');
    }
}

document.addEventListener('DOMContentLoaded', () => {
    new QuizApp();
});